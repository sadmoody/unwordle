{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/words.js","../../src/utils/getBlankLetterFrequency.js","../../src/utils/isSolutionValidForEntry.js","../../src/App.svelte","../../src/utils/sortObject.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export let wordle_answers = [\"cigar\", \"rebut\", \"sissy\", \"humph\", \"awake\", \"blush\", \"focal\", \"evade\", \"naval\", \"serve\", \"heath\", \"dwarf\", \"model\", \"karma\", \"stink\", \"grade\", \"quiet\", \"bench\", \"abate\", \"feign\", \"major\", \"death\", \"fresh\", \"crust\", \"stool\", \"colon\", \"abase\", \"marry\", \"react\", \"batty\", \"pride\", \"floss\", \"helix\", \"croak\", \"staff\", \"paper\", \"unfed\", \"whelp\", \"trawl\", \"outdo\", \"adobe\", \"crazy\", \"sower\", \"repay\", \"digit\", \"crate\", \"cluck\", \"spike\", \"mimic\", \"pound\", \"maxim\", \"linen\", \"unmet\", \"flesh\", \"booby\", \"forth\", \"first\", \"stand\", \"belly\", \"ivory\", \"seedy\", \"print\", \"yearn\", \"drain\", \"bribe\", \"stout\", \"panel\", \"crass\", \"flume\", \"offal\", \"agree\", \"error\", \"swirl\", \"argue\", \"bleed\", \"delta\", \"flick\", \"totem\", \"wooer\", \"front\", \"shrub\", \"parry\", \"biome\", \"lapel\", \"start\", \"greet\", \"goner\", \"golem\", \"lusty\", \"loopy\", \"round\", \"audit\", \"lying\", \"gamma\", \"labor\", \"islet\", \"civic\", \"forge\", \"corny\", \"moult\", \"basic\", \"salad\", \"agate\", \"spicy\", \"spray\", \"essay\", \"fjord\", \"spend\", \"kebab\", \"guild\", \"aback\", \"motor\", \"alone\", \"hatch\", \"hyper\", \"thumb\", \"dowry\", \"ought\", \"belch\", \"dutch\", \"pilot\", \"tweed\", \"comet\", \"jaunt\", \"enema\", \"steed\", \"abyss\", \"growl\", \"fling\", \"dozen\", \"boozy\", \"erode\", \"world\", \"gouge\", \"click\", \"briar\", \"great\", \"altar\", \"pulpy\", \"blurt\", \"coast\", \"duchy\", \"groin\", \"fixer\", \"group\", \"rogue\", \"badly\", \"smart\", \"pithy\", \"gaudy\", \"chill\", \"heron\", \"vodka\", \"finer\", \"surer\", \"radio\", \"rouge\", \"perch\", \"retch\", \"wrote\", \"clock\", \"tilde\", \"store\", \"prove\", \"bring\", \"solve\", \"cheat\", \"grime\", \"exult\", \"usher\", \"epoch\", \"triad\", \"break\", \"rhino\", \"viral\", \"conic\", \"masse\", \"sonic\", \"vital\", \"trace\", \"using\", \"peach\", \"champ\", \"baton\", \"brake\", \"pluck\", \"craze\", \"gripe\", \"weary\", \"picky\", \"acute\", \"ferry\", \"aside\", \"tapir\", \"troll\", \"unify\", \"rebus\", \"boost\", \"truss\", \"siege\", \"tiger\", \"banal\", \"slump\", \"crank\", \"gorge\", \"query\", \"drink\", \"favor\", \"abbey\", \"tangy\", \"panic\", \"solar\", \"shire\", \"proxy\", \"point\", \"robot\", \"prick\", \"wince\", \"crimp\", \"knoll\", \"sugar\", \"whack\", \"mount\", \"perky\", \"could\", \"wrung\", \"light\", \"those\", \"moist\", \"shard\", \"pleat\", \"aloft\", \"skill\", \"elder\", \"frame\", \"humor\", \"pause\", \"ulcer\", \"ultra\", \"robin\", \"cynic\", \"agora\", \"aroma\", \"caulk\", \"shake\", \"pupal\", \"dodge\", \"swill\", \"tacit\", \"other\", \"thorn\", \"trove\", \"bloke\", \"vivid\", \"spill\", \"chant\", \"choke\", \"rupee\", \"nasty\", \"mourn\", \"ahead\", \"brine\", \"cloth\", \"hoard\", \"sweet\", \"month\", \"lapse\", \"watch\", \"today\", \"focus\", \"smelt\", \"tease\", \"cater\", \"movie\", \"lynch\", \"saute\", \"allow\", \"renew\", \"their\", \"slosh\", \"purge\", \"chest\", \"depot\", \"epoxy\", \"nymph\", \"found\", \"shall\", \"harry\", \"stove\", \"lowly\", \"snout\", \"trope\", \"fewer\", \"shawl\", \"natal\", \"fibre\", \"comma\", \"foray\", \"scare\", \"stair\", \"black\", \"squad\", \"royal\", \"chunk\", \"mince\", \"slave\", \"shame\", \"cheek\", \"ample\", \"flair\", \"foyer\", \"cargo\", \"oxide\", \"plant\", \"olive\", \"inert\", \"askew\", \"heist\", \"shown\", \"zesty\", \"hasty\", \"trash\", \"fella\", \"larva\", \"forgo\", \"story\", \"hairy\", \"train\", \"homer\", \"badge\", \"midst\", \"canny\", \"fetus\", \"butch\", \"farce\", \"slung\", \"tipsy\", \"metal\", \"yield\", \"delve\", \"being\", \"scour\", \"glass\", \"gamer\", \"scrap\", \"money\", \"hinge\", \"album\", \"vouch\", \"asset\", \"tiara\", \"crept\", \"bayou\", \"atoll\", \"manor\", \"creak\", \"showy\", \"phase\", \"froth\", \"depth\", \"gloom\", \"flood\", \"trait\", \"girth\", \"piety\", \"payer\", \"goose\", \"float\", \"donor\", \"atone\", \"primo\", \"apron\", \"blown\", \"cacao\", \"loser\", \"input\", \"gloat\", \"awful\", \"brink\", \"smite\", \"beady\", \"rusty\", \"retro\", \"droll\", \"gawky\", \"hutch\", \"pinto\", \"gaily\", \"egret\", \"lilac\", \"sever\", \"field\", \"fluff\", \"hydro\", \"flack\", \"agape\", \"wench\", \"voice\", \"stead\", \"stalk\", \"berth\", \"madam\", \"night\", \"bland\", \"liver\", \"wedge\", \"augur\", \"roomy\", \"wacky\", \"flock\", \"angry\", \"bobby\", \"trite\", \"aphid\", \"tryst\", \"midge\", \"power\", \"elope\", \"cinch\", \"motto\", \"stomp\", \"upset\", \"bluff\", \"cramp\", \"quart\", \"coyly\", \"youth\", \"rhyme\", \"buggy\", \"alien\", \"smear\", \"unfit\", \"patty\", \"cling\", \"glean\", \"label\", \"hunky\", \"khaki\", \"poker\", \"gruel\", \"twice\", \"twang\", \"shrug\", \"treat\", \"unlit\", \"waste\", \"merit\", \"woven\", \"octal\", \"needy\", \"clown\", \"widow\", \"irony\", \"ruder\", \"gauze\", \"chief\", \"onset\", \"prize\", \"fungi\", \"charm\", \"gully\", \"inter\", \"whoop\", \"taunt\", \"leery\", \"class\", \"theme\", \"lofty\", \"tibia\", \"booze\", \"alpha\", \"thyme\", \"eclat\", \"doubt\", \"parer\", \"chute\", \"stick\", \"trice\", \"alike\", \"sooth\", \"recap\", \"saint\", \"liege\", \"glory\", \"grate\", \"admit\", \"brisk\", \"soggy\", \"usurp\", \"scald\", \"scorn\", \"leave\", \"twine\", \"sting\", \"bough\", \"marsh\", \"sloth\", \"dandy\", \"vigor\", \"howdy\", \"enjoy\", \"valid\", \"ionic\", \"equal\", \"unset\", \"floor\", \"catch\", \"spade\", \"stein\", \"exist\", \"quirk\", \"denim\", \"grove\", \"spiel\", \"mummy\", \"fault\", \"foggy\", \"flout\", \"carry\", \"sneak\", \"libel\", \"waltz\", \"aptly\", \"piney\", \"inept\", \"aloud\", \"photo\", \"dream\", \"stale\", \"vomit\", \"ombre\", \"fanny\", \"unite\", \"snarl\", \"baker\", \"there\", \"glyph\", \"pooch\", \"hippy\", \"spell\", \"folly\", \"louse\", \"gulch\", \"vault\", \"godly\", \"threw\", \"fleet\", \"grave\", \"inane\", \"shock\", \"crave\", \"spite\", \"valve\", \"skimp\", \"claim\", \"rainy\", \"musty\", \"pique\", \"daddy\", \"quasi\", \"arise\", \"aging\", \"valet\", \"opium\", \"avert\", \"stuck\", \"recut\", \"mulch\", \"genre\", \"plume\", \"rifle\", \"count\", \"incur\", \"total\", \"wrest\", \"mocha\", \"deter\", \"study\", \"lover\", \"safer\", \"rivet\", \"funny\", \"smoke\", \"mound\", \"undue\", \"sedan\", \"pagan\", \"swine\", \"guile\", \"gusty\", \"equip\", \"tough\", \"canoe\", \"chaos\", \"covet\", \"human\", \"udder\", \"lunch\", \"blast\", \"stray\", \"manga\", \"melee\", \"lefty\", \"quick\", \"paste\", \"given\", \"octet\", \"risen\", \"groan\", \"leaky\", \"grind\", \"carve\", \"loose\", \"sadly\", \"spilt\", \"apple\", \"slack\", \"honey\", \"final\", \"sheen\", \"eerie\", \"minty\", \"slick\", \"derby\", \"wharf\", \"spelt\", \"coach\", \"erupt\", \"singe\", \"price\", \"spawn\", \"fairy\", \"jiffy\", \"filmy\", \"stack\", \"chose\", \"sleep\", \"ardor\", \"nanny\", \"niece\", \"woozy\", \"handy\", \"grace\", \"ditto\", \"stank\", \"cream\", \"usual\", \"diode\", \"valor\", \"angle\", \"ninja\", \"muddy\", \"chase\", \"reply\", \"prone\", \"spoil\", \"heart\", \"shade\", \"diner\", \"arson\", \"onion\", \"sleet\", \"dowel\", \"couch\", \"palsy\", \"bowel\", \"smile\", \"evoke\", \"creek\", \"lance\", \"eagle\", \"idiot\", \"siren\", \"built\", \"embed\", \"award\", \"dross\", \"annul\", \"goody\", \"frown\", \"patio\", \"laden\", \"humid\", \"elite\", \"lymph\", \"edify\", \"might\", \"reset\", \"visit\", \"gusto\", \"purse\", \"vapor\", \"crock\", \"write\", \"sunny\", \"loath\", \"chaff\", \"slide\", \"queer\", \"venom\", \"stamp\", \"sorry\", \"still\", \"acorn\", \"aping\", \"pushy\", \"tamer\", \"hater\", \"mania\", \"awoke\", \"brawn\", \"swift\", \"exile\", \"birch\", \"lucky\", \"freer\", \"risky\", \"ghost\", \"plier\", \"lunar\", \"winch\", \"snare\", \"nurse\", \"house\", \"borax\", \"nicer\", \"lurch\", \"exalt\", \"about\", \"savvy\", \"toxin\", \"tunic\", \"pried\", \"inlay\", \"chump\", \"lanky\", \"cress\", \"eater\", \"elude\", \"cycle\", \"kitty\", \"boule\", \"moron\", \"tenet\", \"place\", \"lobby\", \"plush\", \"vigil\", \"index\", \"blink\", \"clung\", \"qualm\", \"croup\", \"clink\", \"juicy\", \"stage\", \"decay\", \"nerve\", \"flier\", \"shaft\", \"crook\", \"clean\", \"china\", \"ridge\", \"vowel\", \"gnome\", \"snuck\", \"icing\", \"spiny\", \"rigor\", \"snail\", \"flown\", \"rabid\", \"prose\", \"thank\", \"poppy\", \"budge\", \"fiber\", \"moldy\", \"dowdy\", \"kneel\", \"track\", \"caddy\", \"quell\", \"dumpy\", \"paler\", \"swore\", \"rebar\", \"scuba\", \"splat\", \"flyer\", \"horny\", \"mason\", \"doing\", \"ozone\", \"amply\", \"molar\", \"ovary\", \"beset\", \"queue\", \"cliff\", \"magic\", \"truce\", \"sport\", \"fritz\", \"edict\", \"twirl\", \"verse\", \"llama\", \"eaten\", \"range\", \"whisk\", \"hovel\", \"rehab\", \"macaw\", \"sigma\", \"spout\", \"verve\", \"sushi\", \"dying\", \"fetid\", \"brain\", \"buddy\", \"thump\", \"scion\", \"candy\", \"chord\", \"basin\", \"march\", \"crowd\", \"arbor\", \"gayly\", \"musky\", \"stain\", \"dally\", \"bless\", \"bravo\", \"stung\", \"title\", \"ruler\", \"kiosk\", \"blond\", \"ennui\", \"layer\", \"fluid\", \"tatty\", \"score\", \"cutie\", \"zebra\", \"barge\", \"matey\", \"bluer\", \"aider\", \"shook\", \"river\", \"privy\", \"betel\", \"frisk\", \"bongo\", \"begun\", \"azure\", \"weave\", \"genie\", \"sound\", \"glove\", \"braid\", \"scope\", \"wryly\", \"rover\", \"assay\", \"ocean\", \"bloom\", \"irate\", \"later\", \"woken\", \"silky\", \"wreck\", \"dwelt\", \"slate\", \"smack\", \"solid\", \"amaze\", \"hazel\", \"wrist\", \"jolly\", \"globe\", \"flint\", \"rouse\", \"civil\", \"vista\", \"relax\", \"cover\", \"alive\", \"beech\", \"jetty\", \"bliss\", \"vocal\", \"often\", \"dolly\", \"eight\", \"joker\", \"since\", \"event\", \"ensue\", \"shunt\", \"diver\", \"poser\", \"worst\", \"sweep\", \"alley\", \"creed\", \"anime\", \"leafy\", \"bosom\", \"dunce\", \"stare\", \"pudgy\", \"waive\", \"choir\", \"stood\", \"spoke\", \"outgo\", \"delay\", \"bilge\", \"ideal\", \"clasp\", \"seize\", \"hotly\", \"laugh\", \"sieve\", \"block\", \"meant\", \"grape\", \"noose\", \"hardy\", \"shied\", \"drawl\", \"daisy\", \"putty\", \"strut\", \"burnt\", \"tulip\", \"crick\", \"idyll\", \"vixen\", \"furor\", \"geeky\", \"cough\", \"naive\", \"shoal\", \"stork\", \"bathe\", \"aunty\", \"check\", \"prime\", \"brass\", \"outer\", \"furry\", \"razor\", \"elect\", \"evict\", \"imply\", \"demur\", \"quota\", \"haven\", \"cavil\", \"swear\", \"crump\", \"dough\", \"gavel\", \"wagon\", \"salon\", \"nudge\", \"harem\", \"pitch\", \"sworn\", \"pupil\", \"excel\", \"stony\", \"cabin\", \"unzip\", \"queen\", \"trout\", \"polyp\", \"earth\", \"storm\", \"until\", \"taper\", \"enter\", \"child\", \"adopt\", \"minor\", \"fatty\", \"husky\", \"brave\", \"filet\", \"slime\", \"glint\", \"tread\", \"steal\", \"regal\", \"guest\", \"every\", \"murky\", \"share\", \"spore\", \"hoist\", \"buxom\", \"inner\", \"otter\", \"dimly\", \"level\", \"sumac\", \"donut\", \"stilt\", \"arena\", \"sheet\", \"scrub\", \"fancy\", \"slimy\", \"pearl\", \"silly\", \"porch\", \"dingo\", \"sepia\", \"amble\", \"shady\", \"bread\", \"friar\", \"reign\", \"dairy\", \"quill\", \"cross\", \"brood\", \"tuber\", \"shear\", \"posit\", \"blank\", \"villa\", \"shank\", \"piggy\", \"freak\", \"which\", \"among\", \"fecal\", \"shell\", \"would\", \"algae\", \"large\", \"rabbi\", \"agony\", \"amuse\", \"bushy\", \"copse\", \"swoon\", \"knife\", \"pouch\", \"ascot\", \"plane\", \"crown\", \"urban\", \"snide\", \"relay\", \"abide\", \"viola\", \"rajah\", \"straw\", \"dilly\", \"crash\", \"amass\", \"third\", \"trick\", \"tutor\", \"woody\", \"blurb\", \"grief\", \"disco\", \"where\", \"sassy\", \"beach\", \"sauna\", \"comic\", \"clued\", \"creep\", \"caste\", \"graze\", \"snuff\", \"frock\", \"gonad\", \"drunk\", \"prong\", \"lurid\", \"steel\", \"halve\", \"buyer\", \"vinyl\", \"utile\", \"smell\", \"adage\", \"worry\", \"tasty\", \"local\", \"trade\", \"finch\", \"ashen\", \"modal\", \"gaunt\", \"clove\", \"enact\", \"adorn\", \"roast\", \"speck\", \"sheik\", \"missy\", \"grunt\", \"snoop\", \"party\", \"touch\", \"mafia\", \"emcee\", \"array\", \"south\", \"vapid\", \"jelly\", \"skulk\", \"angst\", \"tubal\", \"lower\", \"crest\", \"sweat\", \"cyber\", \"adore\", \"tardy\", \"swami\", \"notch\", \"groom\", \"roach\", \"hitch\", \"young\", \"align\", \"ready\", \"frond\", \"strap\", \"puree\", \"realm\", \"venue\", \"swarm\", \"offer\", \"seven\", \"dryer\", \"diary\", \"dryly\", \"drank\", \"acrid\", \"heady\", \"theta\", \"junto\", \"pixie\", \"quoth\", \"bonus\", \"shalt\", \"penne\", \"amend\", \"datum\", \"build\", \"piano\", \"shelf\", \"lodge\", \"suing\", \"rearm\", \"coral\", \"ramen\", \"worth\", \"psalm\", \"infer\", \"overt\", \"mayor\", \"ovoid\", \"glide\", \"usage\", \"poise\", \"randy\", \"chuck\", \"prank\", \"fishy\", \"tooth\", \"ether\", \"drove\", \"idler\", \"swath\", \"stint\", \"while\", \"begat\", \"apply\", \"slang\", \"tarot\", \"radar\", \"credo\", \"aware\", \"canon\", \"shift\", \"timer\", \"bylaw\", \"serum\", \"three\", \"steak\", \"iliac\", \"shirk\", \"blunt\", \"puppy\", \"penal\", \"joist\", \"bunny\", \"shape\", \"beget\", \"wheel\", \"adept\", \"stunt\", \"stole\", \"topaz\", \"chore\", \"fluke\", \"afoot\", \"bloat\", \"bully\", \"dense\", \"caper\", \"sneer\", \"boxer\", \"jumbo\", \"lunge\", \"space\", \"avail\", \"short\", \"slurp\", \"loyal\", \"flirt\", \"pizza\", \"conch\", \"tempo\", \"droop\", \"plate\", \"bible\", \"plunk\", \"afoul\", \"savoy\", \"steep\", \"agile\", \"stake\", \"dwell\", \"knave\", \"beard\", \"arose\", \"motif\", \"smash\", \"broil\", \"glare\", \"shove\", \"baggy\", \"mammy\", \"swamp\", \"along\", \"rugby\", \"wager\", \"quack\", \"squat\", \"snaky\", \"debit\", \"mange\", \"skate\", \"ninth\", \"joust\", \"tramp\", \"spurn\", \"medal\", \"micro\", \"rebel\", \"flank\", \"learn\", \"nadir\", \"maple\", \"comfy\", \"remit\", \"gruff\", \"ester\", \"least\", \"mogul\", \"fetch\", \"cause\", \"oaken\", \"aglow\", \"meaty\", \"gaffe\", \"shyly\", \"racer\", \"prowl\", \"thief\", \"stern\", \"poesy\", \"rocky\", \"tweet\", \"waist\", \"spire\", \"grope\", \"havoc\", \"patsy\", \"truly\", \"forty\", \"deity\", \"uncle\", \"swish\", \"giver\", \"preen\", \"bevel\", \"lemur\", \"draft\", \"slope\", \"annoy\", \"lingo\", \"bleak\", \"ditty\", \"curly\", \"cedar\", \"dirge\", \"grown\", \"horde\", \"drool\", \"shuck\", \"crypt\", \"cumin\", \"stock\", \"gravy\", \"locus\", \"wider\", \"breed\", \"quite\", \"chafe\", \"cache\", \"blimp\", \"deign\", \"fiend\", \"logic\", \"cheap\", \"elide\", \"rigid\", \"false\", \"renal\", \"pence\", \"rowdy\", \"shoot\", \"blaze\", \"envoy\", \"posse\", \"brief\", \"never\", \"abort\", \"mouse\", \"mucky\", \"sulky\", \"fiery\", \"media\", \"trunk\", \"yeast\", \"clear\", \"skunk\", \"scalp\", \"bitty\", \"cider\", \"koala\", \"duvet\", \"segue\", \"creme\", \"super\", \"grill\", \"after\", \"owner\", \"ember\", \"reach\", \"nobly\", \"empty\", \"speed\", \"gipsy\", \"recur\", \"smock\", \"dread\", \"merge\", \"burst\", \"kappa\", \"amity\", \"shaky\", \"hover\", \"carol\", \"snort\", \"synod\", \"faint\", \"haunt\", \"flour\", \"chair\", \"detox\", \"shrew\", \"tense\", \"plied\", \"quark\", \"burly\", \"novel\", \"waxen\", \"stoic\", \"jerky\", \"blitz\", \"beefy\", \"lyric\", \"hussy\", \"towel\", \"quilt\", \"below\", \"bingo\", \"wispy\", \"brash\", \"scone\", \"toast\", \"easel\", \"saucy\", \"value\", \"spice\", \"honor\", \"route\", \"sharp\", \"bawdy\", \"radii\", \"skull\", \"phony\", \"issue\", \"lager\", \"swell\", \"urine\", \"gassy\", \"trial\", \"flora\", \"upper\", \"latch\", \"wight\", \"brick\", \"retry\", \"holly\", \"decal\", \"grass\", \"shack\", \"dogma\", \"mover\", \"defer\", \"sober\", \"optic\", \"crier\", \"vying\", \"nomad\", \"flute\", \"hippo\", \"shark\", \"drier\", \"obese\", \"bugle\", \"tawny\", \"chalk\", \"feast\", \"ruddy\", \"pedal\", \"scarf\", \"cruel\", \"bleat\", \"tidal\", \"slush\", \"semen\", \"windy\", \"dusty\", \"sally\", \"igloo\", \"nerdy\", \"jewel\", \"shone\", \"whale\", \"hymen\", \"abuse\", \"fugue\", \"elbow\", \"crumb\", \"pansy\", \"welsh\", \"syrup\", \"terse\", \"suave\", \"gamut\", \"swung\", \"drake\", \"freed\", \"afire\", \"shirt\", \"grout\", \"oddly\", \"tithe\", \"plaid\", \"dummy\", \"broom\", \"blind\", \"torch\", \"enemy\", \"again\", \"tying\", \"pesky\", \"alter\", \"gazer\", \"noble\", \"ethos\", \"bride\", \"extol\", \"decor\", \"hobby\", \"beast\", \"idiom\", \"utter\", \"these\", \"sixth\", \"alarm\", \"erase\", \"elegy\", \"spunk\", \"piper\", \"scaly\", \"scold\", \"hefty\", \"chick\", \"sooty\", \"canal\", \"whiny\", \"slash\", \"quake\", \"joint\", \"swept\", \"prude\", \"heavy\", \"wield\", \"femme\", \"lasso\", \"maize\", \"shale\", \"screw\", \"spree\", \"smoky\", \"whiff\", \"scent\", \"glade\", \"spent\", \"prism\", \"stoke\", \"riper\", \"orbit\", \"cocoa\", \"guilt\", \"humus\", \"shush\", \"table\", \"smirk\", \"wrong\", \"noisy\", \"alert\", \"shiny\", \"elate\", \"resin\", \"whole\", \"hunch\", \"pixel\", \"polar\", \"hotel\", \"sword\", \"cleat\", \"mango\", \"rumba\", \"puffy\", \"filly\", \"billy\", \"leash\", \"clout\", \"dance\", \"ovate\", \"facet\", \"chili\", \"paint\", \"liner\", \"curio\", \"salty\", \"audio\", \"snake\", \"fable\", \"cloak\", \"navel\", \"spurt\", \"pesto\", \"balmy\", \"flash\", \"unwed\", \"early\", \"churn\", \"weedy\", \"stump\", \"lease\", \"witty\", \"wimpy\", \"spoof\", \"saner\", \"blend\", \"salsa\", \"thick\", \"warty\", \"manic\", \"blare\", \"squib\", \"spoon\", \"probe\", \"crepe\", \"knack\", \"force\", \"debut\", \"order\", \"haste\", \"teeth\", \"agent\", \"widen\", \"icily\", \"slice\", \"ingot\", \"clash\", \"juror\", \"blood\", \"abode\", \"throw\", \"unity\", \"pivot\", \"slept\", \"troop\", \"spare\", \"sewer\", \"parse\", \"morph\", \"cacti\", \"tacky\", \"spool\", \"demon\", \"moody\", \"annex\", \"begin\", \"fuzzy\", \"patch\", \"water\", \"lumpy\", \"admin\", \"omega\", \"limit\", \"tabby\", \"macho\", \"aisle\", \"skiff\", \"basis\", \"plank\", \"verge\", \"botch\", \"crawl\", \"lousy\", \"slain\", \"cubic\", \"raise\", \"wrack\", \"guide\", \"foist\", \"cameo\", \"under\", \"actor\", \"revue\", \"fraud\", \"harpy\", \"scoop\", \"climb\", \"refer\", \"olden\", \"clerk\", \"debar\", \"tally\", \"ethic\", \"cairn\", \"tulle\", \"ghoul\", \"hilly\", \"crude\", \"apart\", \"scale\", \"older\", \"plain\", \"sperm\", \"briny\", \"abbot\", \"rerun\", \"quest\", \"crisp\", \"bound\", \"befit\", \"drawn\", \"suite\", \"itchy\", \"cheer\", \"bagel\", \"guess\", \"broad\", \"axiom\", \"chard\", \"caput\", \"leant\", \"harsh\", \"curse\", \"proud\", \"swing\", \"opine\", \"taste\", \"lupus\", \"gumbo\", \"miner\", \"green\", \"chasm\", \"lipid\", \"topic\", \"armor\", \"brush\", \"crane\", \"mural\", \"abled\", \"habit\", \"bossy\", \"maker\", \"dusky\", \"dizzy\", \"lithe\", \"brook\", \"jazzy\", \"fifty\", \"sense\", \"giant\", \"surly\", \"legal\", \"fatal\", \"flunk\", \"began\", \"prune\", \"small\", \"slant\", \"scoff\", \"torus\", \"ninny\", \"covey\", \"viper\", \"taken\", \"moral\", \"vogue\", \"owing\", \"token\", \"entry\", \"booth\", \"voter\", \"chide\", \"elfin\", \"ebony\", \"neigh\", \"minim\", \"melon\", \"kneed\", \"decoy\", \"voila\", \"ankle\", \"arrow\", \"mushy\", \"tribe\", \"cease\", \"eager\", \"birth\", \"graph\", \"odder\", \"terra\", \"weird\", \"tried\", \"clack\", \"color\", \"rough\", \"weigh\", \"uncut\", \"ladle\", \"strip\", \"craft\", \"minus\", \"dicey\", \"titan\", \"lucid\", \"vicar\", \"dress\", \"ditch\", \"gypsy\", \"pasta\", \"taffy\", \"flame\", \"swoop\", \"aloof\", \"sight\", \"broke\", \"teary\", \"chart\", \"sixty\", \"wordy\", \"sheer\", \"leper\", \"nosey\", \"bulge\", \"savor\", \"clamp\", \"funky\", \"foamy\", \"toxic\", \"brand\", \"plumb\", \"dingy\", \"butte\", \"drill\", \"tripe\", \"bicep\", \"tenor\", \"krill\", \"worse\", \"drama\", \"hyena\", \"think\", \"ratio\", \"cobra\", \"basil\", \"scrum\", \"bused\", \"phone\", \"court\", \"camel\", \"proof\", \"heard\", \"angel\", \"petal\", \"pouty\", \"throb\", \"maybe\", \"fetal\", \"sprig\", \"spine\", \"shout\", \"cadet\", \"macro\", \"dodgy\", \"satyr\", \"rarer\", \"binge\", \"trend\", \"nutty\", \"leapt\", \"amiss\", \"split\", \"myrrh\", \"width\", \"sonar\", \"tower\", \"baron\", \"fever\", \"waver\", \"spark\", \"belie\", \"sloop\", \"expel\", \"smote\", \"baler\", \"above\", \"north\", \"wafer\", \"scant\", \"frill\", \"awash\", \"snack\", \"scowl\", \"frail\", \"drift\", \"limbo\", \"fence\", \"motel\", \"ounce\", \"wreak\", \"revel\", \"talon\", \"prior\", \"knelt\", \"cello\", \"flake\", \"debug\", \"anode\", \"crime\", \"salve\", \"scout\", \"imbue\", \"pinky\", \"stave\", \"vague\", \"chock\", \"fight\", \"video\", \"stone\", \"teach\", \"cleft\", \"frost\", \"prawn\", \"booty\", \"twist\", \"apnea\", \"stiff\", \"plaza\", \"ledge\", \"tweak\", \"board\", \"grant\", \"medic\", \"bacon\", \"cable\", \"brawl\", \"slunk\", \"raspy\", \"forum\", \"drone\", \"women\", \"mucus\", \"boast\", \"toddy\", \"coven\", \"tumor\", \"truer\", \"wrath\", \"stall\", \"steam\", \"axial\", \"purer\", \"daily\", \"trail\", \"niche\", \"mealy\", \"juice\", \"nylon\", \"plump\", \"merry\", \"flail\", \"papal\", \"wheat\", \"berry\", \"cower\", \"erect\", \"brute\", \"leggy\", \"snipe\", \"sinew\", \"skier\", \"penny\", \"jumpy\", \"rally\", \"umbra\", \"scary\", \"modem\", \"gross\", \"avian\", \"greed\", \"satin\", \"tonic\", \"parka\", \"sniff\", \"livid\", \"stark\", \"trump\", \"giddy\", \"reuse\", \"taboo\", \"avoid\", \"quote\", \"devil\", \"liken\", \"gloss\", \"gayer\", \"beret\", \"noise\", \"gland\", \"dealt\", \"sling\", \"rumor\", \"opera\", \"thigh\", \"tonga\", \"flare\", \"wound\", \"white\", \"bulky\", \"etude\", \"horse\", \"circa\", \"paddy\", \"inbox\", \"fizzy\", \"grain\", \"exert\", \"surge\", \"gleam\", \"belle\", \"salvo\", \"crush\", \"fruit\", \"sappy\", \"taker\", \"tract\", \"ovine\", \"spiky\", \"frank\", \"reedy\", \"filth\", \"spasm\", \"heave\", \"mambo\", \"right\", \"clank\", \"trust\", \"lumen\", \"borne\", \"spook\", \"sauce\", \"amber\", \"lathe\", \"carat\", \"corer\", \"dirty\", \"slyly\", \"affix\", \"alloy\", \"taint\", \"sheep\", \"kinky\", \"wooly\", \"mauve\", \"flung\", \"yacht\", \"fried\", \"quail\", \"brunt\", \"grimy\", \"curvy\", \"cagey\", \"rinse\", \"deuce\", \"state\", \"grasp\", \"milky\", \"bison\", \"graft\", \"sandy\", \"baste\", \"flask\", \"hedge\", \"girly\", \"swash\", \"boney\", \"coupe\", \"endow\", \"abhor\", \"welch\", \"blade\", \"tight\", \"geese\", \"miser\", \"mirth\", \"cloud\", \"cabal\", \"leech\", \"close\", \"tenth\", \"pecan\", \"droit\", \"grail\", \"clone\", \"guise\", \"ralph\", \"tango\", \"biddy\", \"smith\", \"mower\", \"payee\", \"serif\", \"drape\", \"fifth\", \"spank\", \"glaze\", \"allot\", \"truck\", \"kayak\", \"virus\", \"testy\", \"tepee\", \"fully\", \"zonal\", \"metro\", \"curry\", \"grand\", \"banjo\", \"axion\", \"bezel\", \"occur\", \"chain\", \"nasal\", \"gooey\", \"filer\", \"brace\", \"allay\", \"pubic\", \"raven\", \"plead\", \"gnash\", \"flaky\", \"munch\", \"dully\", \"eking\", \"thing\", \"slink\", \"hurry\", \"theft\", \"shorn\", \"pygmy\", \"ranch\", \"wring\", \"lemon\", \"shore\", \"mamma\", \"froze\", \"newer\", \"style\", \"moose\", \"antic\", \"drown\", \"vegan\", \"chess\", \"guppy\", \"union\", \"lever\", \"lorry\", \"image\", \"cabby\", \"druid\", \"exact\", \"truth\", \"dopey\", \"spear\", \"cried\", \"chime\", \"crony\", \"stunk\", \"timid\", \"batch\", \"gauge\", \"rotor\", \"crack\", \"curve\", \"latte\", \"witch\", \"bunch\", \"repel\", \"anvil\", \"soapy\", \"meter\", \"broth\", \"madly\", \"dried\", \"scene\", \"known\", \"magma\", \"roost\", \"woman\", \"thong\", \"punch\", \"pasty\", \"downy\", \"knead\", \"whirl\", \"rapid\", \"clang\", \"anger\", \"drive\", \"goofy\", \"email\", \"music\", \"stuff\", \"bleep\", \"rider\", \"mecca\", \"folio\", \"setup\", \"verso\", \"quash\", \"fauna\", \"gummy\", \"happy\", \"newly\", \"fussy\", \"relic\", \"guava\", \"ratty\", \"fudge\", \"femur\", \"chirp\", \"forte\", \"alibi\", \"whine\", \"petty\", \"golly\", \"plait\", \"fleck\", \"felon\", \"gourd\", \"brown\", \"thrum\", \"ficus\", \"stash\", \"decry\", \"wiser\", \"junta\", \"visor\", \"daunt\", \"scree\", \"impel\", \"await\", \"press\", \"whose\", \"turbo\", \"stoop\", \"speak\", \"mangy\", \"eying\", \"inlet\", \"crone\", \"pulse\", \"mossy\", \"staid\", \"hence\", \"pinch\", \"teddy\", \"sully\", \"snore\", \"ripen\", \"snowy\", \"attic\", \"going\", \"leach\", \"mouth\", \"hound\", \"clump\", \"tonal\", \"bigot\", \"peril\", \"piece\", \"blame\", \"haute\", \"spied\", \"undid\", \"intro\", \"basal\", \"shine\", \"gecko\", \"rodeo\", \"guard\", \"steer\", \"loamy\", \"scamp\", \"scram\", \"manly\", \"hello\", \"vaunt\", \"organ\", \"feral\", \"knock\", \"extra\", \"condo\", \"adapt\", \"willy\", \"polka\", \"rayon\", \"skirt\", \"faith\", \"torso\", \"match\", \"mercy\", \"tepid\", \"sleek\", \"riser\", \"twixt\", \"peace\", \"flush\", \"catty\", \"login\", \"eject\", \"roger\", \"rival\", \"untie\", \"refit\", \"aorta\", \"adult\", \"judge\", \"rower\", \"artsy\", \"rural\", \"shave\"];","export function getBlankLetterFrequency(numLetters=5){\n    let letterFrequency = {};\n    for (let pos=0; pos<numLetters; pos++){\n        letterFrequency[pos] = {};\n        for (let char=97; char<123; char++){\n            letterFrequency[pos][String.fromCharCode(char)] = 0;\n        }\n    }\n    return letterFrequency;\n}","// Check if the potential solution would return the same results for the given entry\n// Otherwise, the potential solution is invalid\nexport function isSolutionValidForEntry(entry, potentialSolution) {\n    const invalidLetterCounts = {};\n\n    for (let i = 0; i < potentialSolution.length; i++) {\n        const solutionLetter = potentialSolution[i];\n        const entryLetter = entry[i].letter;\n\n        // We only want to consider the counts of letters that are not fully correct\n        if (solutionLetter === entryLetter) {\n            continue;\n        }\n\n        if (solutionLetter in invalidLetterCounts) {\n            invalidLetterCounts[solutionLetter] += 1;\n        } else {\n            invalidLetterCounts[solutionLetter] = 1;\n        }\n    }\n\n    for (let i = 0; i < potentialSolution.length; i++) {\n        const solutionLetter = potentialSolution[i];\n        const currentEntry = entry[i];\n        const entryLetter = currentEntry.letter;\n        const entryState = currentEntry.state;\n\n        if (solutionLetter === entryLetter) {\n            // The solution letter matches the entry letter in the same position\n            if (entryState !== 2) { // 2 = fully correct\n                return false;\n            }\n        } else if (\n            potentialSolution.includes(entryLetter) &&\n            entryLetter in invalidLetterCounts &&\n            invalidLetterCounts[entryLetter] > 0\n        ) {\n            // The potential solution includes the entry letter, but does not match the position\n            if (entryState !== 1) { // 1 = incorrect position\n                return false;\n            }\n            invalidLetterCounts[entryLetter] -= 1;\n        } else {\n            // There should be no more remaining occurrences of the letter in the potential solution\n            if (entryState !== 0) { // 0 = not present\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n","<script>\n\timport { wordle_answers } from './words.js';\n\timport { getBlankLetterFrequency } from './utils/getBlankLetterFrequency.js';\n\timport { isSolutionValidForEntry } from './utils/isSolutionValidForEntry.js';\n\timport { sortObject } from './utils/sortObject.js';\n\n\tlet WORDLENGTH = 5;\n\tlet showInstructions = false;\n\n\tlet relevanceScores = {};\n\tlet filteredAnswers = wordle_answers;\n\tlet letterFrequency = getBlankLetterFrequency();\n\tlet entries=[[]];\n\n\tfunction runAnalysis() {\n\t\tfilteredAnswers = wordle_answers;\n\n\t\tfilteredAnswers = filteredAnswers.filter(word => {\n\t\t\tlet keepWord = true;\n\n\t\t\tfor (let entryIndex = 0; entryIndex < entries.length - 1; entryIndex++) {\n\t\t\t\tconst entry = entries[entryIndex];\n\n\t\t\t\tif (!isSolutionValidForEntry(entry, word)) {\n\t\t\t\t\tkeepWord = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn keepWord;\n\t\t});\n\n\t\tletterFrequency = getBlankLetterFrequency();\n\t\tfilteredAnswers.forEach(word => {\n\t\t\tfor (let pos=0; pos<word.length; pos++) {\n\t\t\t\tletterFrequency[pos][word[pos]]++;\n\t\t\t}\n\t\t});\n\n\t\trelevanceScores = {};\n\t\tfilteredAnswers.forEach(word => {\n\t\t\trelevanceScores[word] = 0;\n\t\t\tfor (let pos=0; pos<word.length; pos++) {\n\t\t\t\trelevanceScores[word] += letterFrequency[pos][word[pos]];\n\t\t\t}\n\t\t});\n\t\trelevanceScores = sortObject(relevanceScores);\n\t}\n\n\tfunction keyPress(key, keyCode){\n\t\tif (keyCode == 8) {\n\t\t\tentries[entries.length-1] = entries[entries.length-1].slice(0, -1);\n\t\t} else if (keyCode >= 65 && keyCode <= 90 && entries[entries.length-1].length < WORDLENGTH) {\n\t\t\tentries[entries.length-1] = [...entries[entries.length-1], {letter: key, state: -1}];\n\t\t} else if (keyCode === 13 && entries[entries.length-1].length === WORDLENGTH) {\n\t\t\tfor (let pos=0; pos<entries[entries.length-1].length; pos++) {\n\t\t\t\tentries[entries.length-1][pos].state = 0;\n\t\t\t}\n\t\t\tentries = [...entries, []];\n\t\t\trunAnalysis();\n\t\t}\n\t}\n\n\tfunction handleKeydown(event) {\n\t\tlet key = event.key;\n\t\tlet keyCode = event.keyCode;\n\t\tkeyPress(key, keyCode);\n\t}\n\n\tfunction keyboardEntry(key) {\n\t\tif (key === \"Backspace\") {\n\t\t\tkeyPress(key, 8);\n\t\t} else if (key === \"Enter\") {\n\t\t\tkeyPress(key, 13);\n\t\t} else {\n\t\t\tkeyPress(key, key.charCodeAt(0)-32);\n\t\t}\n\t}\n\n\tfunction tilePress(e_index, l_index) {\n\t\tif (e_index < entries.length-1) {\n\t\t\tentries[e_index][l_index].state = (entries[e_index][l_index].state + 1) % 3;\n\t\t\trunAnalysis();\n\t\t}\n\t}\n\t\n\tfunction getTileStateName(state) {\n\t\tif (state === 0) {\n\t\t\treturn \"absent\";\n\t\t} else if (state === 1) {\n\t\t\treturn \"present\";\n\t\t} else if (state === 2) {\n\t\t\treturn \"correct\";\n\t\t} else if (state === -1) {\n\t\t\treturn \"tbd\";\n\t\t}\n\t\treturn \"empty\";\n\t}\n\n</script>\n\n<svelte:window on:keydown={handleKeydown} on:load=\"{runAnalysis}\"/>\n<div id=\"game\">\n\t<header>\n\t\t<div class=\"menu\">\n\t\t\t<button id=\"help\" class=\"icon\" on:click={() => showInstructions = !showInstructions}>\n\t\t\t\t<game-icon icon=\"help\">\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n\t\t\t\t\t\t<path fill=\"var(--color-tone-3)\" d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</game-icon>\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"title\"> UNWORDLE </div>\n\t\t<div class=\"menu\">\n\t\t</div>\n\t</header>\n\t<div id=\"board-container\">\n\t\t<div id=\"board\" style=\"width: 350px; height: 420px;\">\n\t\t\t{#each entries as entry, e_index}\n\t\t\t\t<game-row length={WORDLENGTH}>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t{#each entry as tile, l_index}\n\t\t\t\t\t\t\t<game-tile on:click={() => tilePress(e_index, l_index)}>\n\t\t\t\t\t\t\t\t<div class=\"tile\" data-state=\"{getTileStateName(tile.state)}\" data-animation=\"pop\">{tile.letter}</div>\n\t\t\t\t\t\t\t</game-tile>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t{#each {length: WORDLENGTH - entry.length} as _}\n\t\t\t\t\t\t\t<game-tile>\n\t\t\t\t\t\t\t\t<div class=\"tile\" data-state=\"empty\"></div>\n\t\t\t\t\t\t\t</game-tile>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</game-row>\n\t\t\t{/each}\n\t\t\t<div class=\"suggestions\">\n\t\t\t\t<div class=\"suggestion\" id=\"title\">Best words to guess next</div>\n\t\t\t\t{#each Object.entries(relevanceScores) as [word, score], index}\n\t\t\t\t\t{#if index < 10}\n\t\t\t\t\t\t<div class=\"suggestion\">{index+1}. {word}</div>\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<game-keyboard>\n\t\t<div id=\"keyboard\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<button on:click={() => keyboardEntry(\"q\")}>q</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"w\")}>w</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"e\")}>e</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"r\")}>r</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"t\")}>t</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"y\")}>y</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"u\")}>u</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"i\")}>i</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"o\")}>o</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"p\")}>p</button>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"spacer half\"></div>\n\t\t\t\t<button on:click={() => keyboardEntry(\"a\")}>a</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"s\")}>s</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"d\")}>d</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"f\")}>f</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"g\")}>g</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"h\")}>h</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"j\")}>j</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"k\")}>k</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"l\")}>l</button>\n\t\t\t\t<div class=\"spacer half\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<button class=\"one-and-a-half\" on:click={() => keyboardEntry(\"Enter\")}>enter</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"z\")}>z</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"x\")}>x</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"c\")}>c</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"v\")}>v</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"b\")}>b</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"n\")}>n</button>\n\t\t\t\t<button on:click={() => keyboardEntry(\"m\")}>m</button>\n\t\t\t\t<button class=\"one-and-a-half\" on:click={() => keyboardEntry(\"Backspace\")}>\n\t\t\t\t\t<game-icon icon=\"backspace\">\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n\t\t\t\t\t\t\t<path fill=\"var(--color-tone-1)\" d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</game-icon>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</game-keyboard>\n\t<game-page style=\"display:{showInstructions ? \"block\":\"none\"}\">\n\t\t<strong>HOW TO USE</strong>\n\t\t<game-help page slot=\"content\">\n\t\t\t<section>\n\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t<p>You should already know what <strong><a href=\"https://www.powerlanguage.co.uk/wordle/\">WORDLE</a></strong> is if you're here. It's the word-game sensation by <a href=\"https://www.powerlanguage.co.uk/\">Josh Wardle</a> taking the world by storm.</p>\n\t\t\t\t\t<p>This is a tool to help you pick the best next answer.</p>\n\t\t\t\t\t<p>After entering a word, click on the tiles to flip them to how they appear on Wordle.</p>\n\t\t\t\t\t<p>This website is purposefully \"unplayable\". It is just a tool to help you when you're stuck. If you want to play Wordle, go to the <a href=\"https://www.powerlanguage.co.uk/wordle/\">THE OFFICIAL WEBSITE</a></p>\n\t\t\t\t\t<p>The interface is clunky and sloppy because I don't know what I'm doing.</p>\n\t\t\t\t\t<p><strong><a href=\"https://twitter.com/moodyhikmet\">I'm on Twitter as well</a></strong></p>\n\t\t\t\t\t<p>You can find the source code for this site at this <strong><a href=\"https://github.com/sadmoody/unwordle-svelte\">Github Repo</a></strong></p>\n\t\t\t\t\t<p>Yes if you use this website when you're playing - you're cheating. This is supposed to be a poor-man's Stockfish but for Wordle.</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</game-help>\n\t</game-page>\n</div>\n\n<style>\n\t.instructions {\n\t\tfont-size: 14px;\n\t\tcolor: var(--color-tone-1);\n\t}\n\tgame-help section {\n\t\tpadding: 16px;\n\t\tpadding-top: 0px;\n\t}\n\tgame-page {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: var(--header-height);\n\t\tbackground: white;\n\t\tmax-width: var(--game-max-width);\n\t\theight:100%;\n\t}\n\tsection {\n\t\tdisplay: block;\n\t}\n\t.content {\n\t\tposition: relative;\n\t\tcolor: var(--color-tone-1);\n\t\tpadding: 0 32px;\n\t\tmax-width: var(--game-max-width);\n\t\twidth: 100%;\n\t\toverflow-y: auto;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\tbutton.icon {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t}\n\t.suggestion#title {\n\t\tmargin-bottom: 5px;\n\t\tfont-size: larger;\n\t}\n\t.suggestion {\n\t\tfont-family: inherit;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\ttext-align: center;\n\t\theight:20px;\n\t\tdisplay:block;\n\t}\n\t.one-and-a-half {\n\t\tflex: 1.5;\n\t\tfont-size: 12px;\n\t}\n\t.half {\n\t\tflex: 0.5;\n\t}\n\t#keyboard .row button {\n\t\tfont-family: inherit;\n\t\tfont-weight: bold;\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tmargin: 0 6px 0 0;\n\t\theight: 58px;\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\tbackground-color: var(--key-bg);\n\t\tcolor: var(--key-text-color);\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttext-transform: uppercase;\n\t\t-webkit-tap-highlight-color: rgba(0,0,0,0.3);\n\t}\n\t#keyboard .row {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tmargin: 0 auto 8px;\n\t\ttouch-action: manipulation;\n\t}\n\t#keyboard {\n\t\tmargin: 0 8px;\n\t\tuser-select: none;\n\t}\n\tgame-keyboard {\n\t\theight: var(--keyboard-height);\n\t}\n\theader .title {\n\t\tfont-weight: 700;\n\t\tfont-size: 36px;\n\t\tletter-spacing: 0.2rem;\n\t\ttext-transform: uppercase;\n\t\ttext-align: center;\n\t}\n\theader {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\theight: var(--header-height);\n\t\tcolor: var(--color-tone-1);\n\t\tborder-bottom: 1px solid var(--color-tone-4);\n\t}\n\t#game {\n\t\twidth: 100%;\n\t\tmax-width: var(--game-max-width);\n\t\tmargin: 0 auto;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t#board-container {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex-grow: 1;\n\t}\n\t#board {\n\t\tdisplay: grid;\n\t\tgrid-template-rows: repeat(6, 1fr);\n\t\tgrid-gap: 5px;\n\t\tpadding: 10px;\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t\toverflow:auto;\n\t}\n\t.row {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(5, 1fr);\n\t\tgrid-gap: 5px;\n\t}\n\n\t.tile[data-animation='flip-in'] {\n\t\tanimation-name: FlipIn;\n\t\tanimation-duration: 250ms;\n\t\tanimation-timing-function: ease-in;\n\t}\n\t@keyframes FlipIn {\n\t\t0% {\n\t\t\ttransform: rotateX(0);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotateX(-90deg);\n\t\t}\n\t}\n\n\t.tile[data-animation='flip-out'] {\n\t\tanimation-name: FlipOut;\n\t\tanimation-duration: 250ms;\n\t\tanimation-timing-function: ease-in;\n\t}\n\t@keyframes FlipIn {\n\t\t0% {\n\t\t\ttransform: rotateX(-90deg);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotateX(0);\n\t\t}\n\t}\n\n\t.tile[data-animation='pop'] {\n\t\tanimation-name: PopIn;\n\t\tanimation-duration: 100ms;\n\t}\n\t@keyframes PopIn {\n\t\tfrom {\n\t\t\ttransform: scale(0.8);\n\t\t\topactiy: 0;\n\t\t}\n\n\t\t40% {\n\t\t\ttransform: scale(1.1);\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.tile[data-state='absent'] {\n\t\tbackground-color: var(--color-absent);\n\t}\n\t.tile[data-state='correct'] {\n\t\tbackground-color: var(--color-correct);\n\t}\n\t.tile[data-state='present'] {\n\t\tbackground-color: var(--color-present);\n\t}\n\t.tile[data-state='tbd'] {\n\t\tbackground-color: var(--color-tone-7);\n\t\tborder: 2px solid var(--color-tone-3);\n\t\tcolor: var(--color-tone-1);\n\t}\n\t.tile[data-state='empty'] {\n    \tborder: 2px solid var(--color-tone-4);\n\t}\n\t.tile {\n\t\twidth: 100%;\n\t\theight: 62px;\n\t\tdisplay: inline-flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tfont-size: 2rem;\n\t\tline-height: 2rem;\n\t\tfont-weight: bold;\n\t\tvertical-align: middle;\n\t\tbox-sizing: border-box;\n\t\tcolor: var(--tile-text-color);\n\t\ttext-transform: uppercase;\n\t\tuser-select: none;\n\t\topacity: 1;\n\t}\n\n\t:root {\n\t\t--color-tone-1: #1a1a1b;\n\t\t--color-tone-2: #787c7e;\n\t\t--color-tone-3: #878a8c;\n\t\t--color-tone-4: #d3d6da;\n\t\t--color-tone-5: #edeff1;\n\t\t--color-tone-6: #f6f7f8;\n\t\t--color-tone-7: #ffffff;\n\t\t--opacity-50: rgba(255, 255, 255, 0.5);\n\t}\n\n\t:root {\n\t\t--green: #6aaa64;\n\t\t--darkendGreen: #538d4e;\n\t\t--yellow: #c9b458;\n\t\t--darkendYellow: #b59f3b;\n\t\t--lightGray: #d8d8d8;\n\t\t--gray: #86888a;\n\t\t--darkGray: #939598;\n\t\t--white: #fff;\n\t\t--black: #212121;\n\t\t--orange: #f5793a;\n\t\t--blue: #85c0f9;\n\t\tfont-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;\n\t\tfont-size: 16px;\n\t\t--header-height: 50px;\n\t\t--keyboard-height: 200px;\n\t\t--game-max-width: 500px;\n\t}\n\t:root {\n        --color-present: var(--yellow);\n        --color-correct: var(--green);\n        --color-absent: var(--color-tone-2);\n        --tile-text-color: var(--color-tone-7);\n        --key-text-color: var(--color-tone-1);\n        --key-evaluated-text-color: var(--color-tone-7);\n        --key-bg: var(--color-tone-4);\n        --key-bg-present: var(--color-present);\n        --key-bg-correct: var(--color-correct);\n        --key-bg-absent: var(--color-absent);\n        --modal-content-bg: var(--color-tone-7);\n    }\n</style>","export function sortObject(obj) {\n    let sorted = {};\n    let keys = Object.keys(obj).sort(function(a, b) { return obj[b] - obj[a] });\n    for (let i=0; i<keys.length; i++) {\n        sorted[keys[i]] = obj[keys[i]];\n    }\n    return sorted;\n}","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","wordle_answers","getBlankLetterFrequency","numLetters","letterFrequency","pos","char","String","fromCharCode","isSolutionValidForEntry","entry","potentialSolution","invalidLetterCounts","solutionLetter","letter","currentEntry","entryLetter","entryState","state","includes","getTileStateName","WORDLENGTH","entries","showInstructions","relevanceScores","filteredAnswers","runAnalysis","word","keepWord","entryIndex","obj","sorted","keys","sort","sortObject","keyPress","keyCode","slice","keyboardEntry","charCodeAt","tilePress","e_index","l_index","$destroy","destroy_component","this","$on","type","index","indexOf","splice","$set","$$props","$$set","body"],"mappings":"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"}